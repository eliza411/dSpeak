From 9ff563810af1b4765e1e5fa839a9e7be1cdf9c05 Mon Sep 17 00:00:00 2001
From: Gregory Perry <lotyrin@gmail.com>
Date: Thu, 6 Dec 2012 23:05:58 -0800
Subject: [PATCH] Pass code to pygments unmodified

Avoid preg_replace() and escapeshellarg() by using preg_replace_callback() and proc_open().

Depends on PHP >= 5.3 as it uses a closure.
---
 pygmentizer.info   |    1 +
 pygmentizer.module |   21 +++++++++++++++------
 2 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/pygmentizer.info b/pygmentizer.info
index dfd42c4..6772fd4 100644
--- a/pygmentizer.info
+++ b/pygmentizer.info
@@ -2,5 +2,6 @@ name = Pygmentizer
 description = Highlight codes by <a href="http://pygments.org" target="_blank">Pygments</a>.
 
 core = 7.x
+php = 5.3
 
 files[] = pygmentizer.module
diff --git a/pygmentizer.module b/pygmentizer.module
index a586ec9..522d04f 100644
--- a/pygmentizer.module
+++ b/pygmentizer.module
@@ -73,8 +73,11 @@ function _pygmentizer_inline_process($text, $filter, $format, $langcode, $cache,
  * Core function does the real job.
  */
 function _pygmentizer_inline_pygmentize($bin_path, $style, $text) {
-  $pattern = '/\[pygmentize([^]]*)\](.*?)\[\/pygmentize\]/se';
-  return preg_replace($pattern, "_pygmentizer_replace_callback('$1', '$2', \$bin_path, \$style)", $text);
+  $pattern = '/\[pygmentize([^]]*)\](.*?)\[\/pygmentize\]/s';
+  $callback = function ($match) use ($bin_path, $style) {
+    return _pygmentizer_replace_callback($match[1], $match[2], $bin_path, $style);
+  };
+  return preg_replace_callback($pattern, $callback, $text);
 }
 
 /**
@@ -227,11 +230,17 @@ function _pygmentizer_replace_callback($params, $code, $bin_path, $style) {
   // prepare params
   $cmd_params = _pygmentizer_params_cmdize(trim($params));
 
-  // user input must be escaped
-  $code = escapeshellarg($code);
+  // Open process and create pipes to talk to pygmentize
+  $proc = proc_open("$bin_path $cmd_params", array(array('pipe','r'), array('pipe','w')), $pipes);
+
+  // Write code to stdin and close pipe.
+  fwrite($pipes[0], $code); // Put code in stdout.
+  fclose($pipes[0]);
 
-  $command = "echo $code | $bin_path $cmd_params";
-  $pygmentized = shell_exec($command);
+  // Read from stdout and close pipe and process.
+  $pygmentized = stream_get_contents($pipes[1]);
+  fclose($pipes[1]);
+  proc_close($proc);
 
   $class = "pygmentized $style";
   return '<div class="' . $class . '">' . $pygmentized . '</div>';
-- 
1.7.9.5

